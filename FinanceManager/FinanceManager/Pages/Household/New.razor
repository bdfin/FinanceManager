@page "/household/new"

@inject HouseholdService HouseholdService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

@if (household is null)
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <h3>New Household</h3>

    <hr />

    <div class="row">
        <div class="col">
            <EditForm Model="@household" OnValidSubmit="@HandleValidSubmit" class="mt-3">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="row">
                    <div class="col-12 w-50 mx-auto text-center">
                        <label for="@household.Name" class="form-label">Name</label>
                        <InputText @bind-Value="household.Name" class="form-control"></InputText>
                    </div>
                </div>

                <div class="row mt-4 mb-5">
                    <div class="col">
                        <a @onclick="AddPerson" class="btn btn-dark shadow-sm"><span class="oi oi-plus" aria-hidden="true"></span> 
                            Add Person
                        </a>
                    </div>
                </div>

                <div class="row">

                    @foreach (var person in household.People)
                    {
                        <div class="col-6">
                            <div class="card d-bl shadow">
                                <div class="card-body">
                                    <button class="btn btn-outline-danger d-block float-right" @onclick="() => RemovePerson(person)">x</button>

                                    <div class="mb-3 mt-3">
                                        <label for="@person.Name" class="form-label">Name</label>
                                        <InputText @bind-Value="person.Name" class="form-control"></InputText>
                                    </div>

                                    <label for="@person.Income" class="form-label">Annual Gross Income</label>
                                    <div class="input-group mb-3">
                                        <span class="input-group-text">£</span>
                                        <InputNumber @bind-Value="person.Income" class="form-control" aria-label="Amount (to the nearest GBP)"></InputNumber>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </EditForm>
        </div>
    </div>
    
}

@code {
    private Models.Household household;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        string userId = UserHelpers.GetUserId(authState);

        household = await HouseholdService.GetHouseholdAsync(userId);

        if (household != null)
            NavigationManager.NavigateTo("household/new");

        household = new Household(userId);
        household.Initialise();
    }

    private void AddPerson()
    {
        household.People.Add(new Person());
    }

    private void RemovePerson(Person person)
    {
        household.People.Remove(person);
    }

    private async Task HandleValidSubmit()
    {

    }
}
